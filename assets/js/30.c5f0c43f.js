(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{397:function(t,r,a){"use strict";a.r(r);var e=a(45),n=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#客户端"}},[t._v("#")]),t._v(" 客户端")]),t._v(" "),a("h4",{attrs:{id:"_1-生态体系完善"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-生态体系完善"}},[t._v("#")]),t._v(" 1. 生态体系完善")]),t._v(" "),a("p",[t._v("CAT3.0推出多种语言的客户端，基本覆盖了主流开发语言。")]),t._v(" "),a("p",[t._v("目前支持：")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/dianping/cat/blob/master/lib/java",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Java")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dianping/cat/blob/master/lib/c",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("C")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dianping/cat/blob/master/lib/cpp",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("C++")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dianping/cat/blob/master/lib/python",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Python")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dianping/cat/blob/master/lib/go",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Go")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/dianping/cat/blob/master/lib/node.js",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("Node.js")]),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/ctripcorp/cat.net",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v(".NET")]),a("OutboundLink")],1)])]),t._v(" "),a("h4",{attrs:{id:"_2-消息采样聚合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-消息采样聚合"}},[t._v("#")]),t._v(" 2. 消息采样聚合")]),t._v(" "),a("p",[t._v("CAT3.0支持采样聚合，当采样命中或者内存队列已满时都会经过采样聚合上报。采样聚合是对消息树拆分归类，利用本地内存做分类统计，将聚合之后的数据进行上报，这样可以减少客户端的消息量以及降低网络开销。")]),t._v(" "),a("h4",{attrs:{id:"_3-精简依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-精简依赖"}},[t._v("#")]),t._v(" 3. 精简依赖")]),t._v(" "),a("p",[t._v("CAT客户端3.0大幅精简了依赖，避免了依赖冲突。")]),t._v(" "),a("h3",{attrs:{id:"服务端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务端"}},[t._v("#")]),t._v(" 服务端")]),t._v(" "),a("h4",{attrs:{id:"_1-自研二进制序列化协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-自研二进制序列化协议"}},[t._v("#")]),t._v(" 1. 自研二进制序列化协议")]),t._v(" "),a("p",[t._v("CAT 序列化协议自定义文本协议升级为自定义二进制协议，在大规模数据实时处理场景下性能提升显著。")]),t._v(" "),a("h4",{attrs:{id:"_2-全新文件存储引擎"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-全新文件存储引擎"}},[t._v("#")]),t._v(" 2. 全新文件存储引擎")]),t._v(" "),a("p",[t._v("CAT3.0采用了全新文件存储引擎，大幅度降低了文件数量，减少了随机IO，显著提升IO性能。")])])}),[],!1,null,null,null);r.default=n.exports}}]);